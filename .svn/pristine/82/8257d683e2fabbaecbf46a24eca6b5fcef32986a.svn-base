
play.http.secret.key="nfy;mx_ILxSl1l5pTB;d[o`AuujY3x2V;HldMS@?y42X9q?UmlpxCD19h0^pI12i"
application.langs="en"
play.filters.disabled+=play.filters.csrf.CSRFFilter

# Root logger:
#logger.root=ERROR

# Logger used by the framework:
#logger.play=INFO

# Logger provided to your application:
#logger.application=INFO
#Logger.javapns=INFO

# set max request body limit
play.http.parser.maxMemoryBuffer=10240K

# enable JVM metrics for prometheus scraping
play-prometheus-filters.register-default-hotspot-collectors = true

play.filters.hosts {
  # Allow requests to example.com, its subdomains, and localhost:9000.
  allowed = ["."]
}
play.filters.cors {
  pathPrefixes = ["/"]
  allowedOrigins = [".workapps.com", "localhost", "hfc.workapps.com"]
  allowedHttpMethods = ["GET", "POST", "PUT", "DELETE"]
  allowedHttpHeaders = ["x-owb-token","client-id","accept","origin","content-type"]
  preflightMaxAge = 3600000
}

play.temporaryFile {
  reaper {
    enabled = true
    initialDelay = "5 minutes"
    interval = "30 seconds"
    olderThan = "30 minutes"
  }
}

internal-threadpool-size=10

akka {
  loglevel = INFO  
  jvm-exit-on-fatal-error = false
  actor.provider = "akka.actor.LocalActorRefProvider"
  actor {
    default-dispatcher = {
     fork-join-executor {
           parallelism-min = 50
           parallelism-factor = 10.0
           parallelism-max = 100
        }
      }
   }
}

#play-akka.actor.default-dispatcher. Thread pool used for rest call, websocket creation
akka.actor.deployment {
	/apnsRouter {
			router = round-robin-pool
			nr-of-instances = 5
	}
	/gcmRouter {
			router = round-robin-pool
			nr-of-instances = 5
	}
	/eventRouter {
			router = round-robin-pool
			nr-of-instances = 5
	}
	/notificationRouter {
			router = round-robin-pool
			nr-of-instances = 5
	}
	/chatMessageRouter {
			router = round-robin-pool
			nr-of-instances = 5
	}
	/iqMessageRouter {
			router = round-robin-pool
			nr-of-instances = 5
	}
	/webBrowserRouter {
			router = round-robin-pool
			nr-of-instances = 5
	}
	/videoSignallingRouter {
			router = round-robin-pool
			nr-of-instances = 5
	}
}
user-connection-actor-dispatcher-thread-pool { 
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {   
    core-pool-size-min = 50
    core-pool-size-factor = 10.0   
    core-pool-size-max = 100
  }
  throughput = 5
}
# Min number of threads to cap factor-based parallelism number to
        #parallelism-min = 8

        # The parallelism factor is used to determine thread pool size using the
        # following formula: ceil(available processors * factor). Resulting size
        # is then bounded by the parallelism-min and parallelism-max values.
        #parallelism-factor = 3.0

        # Max number of threads to cap factor-based parallelism number to
        #parallelism-max = 64

user-connection-actor-dispatcher-fork-join {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 80
    parallelism-factor = 10.0
    parallelism-max = 100
  }
  throughput = 10
}
gcm-actor-dispatcher-fork-join {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 8
    parallelism-factor = 3.0
    parallelism-max = 10
  }
  throughput = 5
}
apns-actor-dispatcher-fork-join {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 8
    parallelism-factor = 2.0
    parallelism-max = 10
  }
  throughput = 5
}
web-browser-actor-dispatcher-fork-join {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 8
    parallelism-factor = 3.0
    parallelism-max = 100
  }
  throughput = 5
}
event-actor-dispatcher-fork-join {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 8
    parallelism-factor = 2.0
    parallelism-max = 100
  }
  throughput = 5
}
#event-actor-dispatcher-fork-join {
 # type = Dispatcher
  #executor = "fork-join-executor"
  #fork-join-executor {
   # parallelism-min = 8
    #parallelism-factor = 2.0
   # parallelism-max = 100
  #}
  #throughput = 5
#}
notification-actor-dispatcher-fork-join {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 8
    parallelism-factor = 2.0
    parallelism-max = 100
  }
  throughput = 5
}

chat-message-actor-dispatcher-fork-join {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 8
    parallelism-factor = 10.0
    parallelism-max = 100
  }
  throughput = 5
}

iq-message-actor-dispatcher-fork-join {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 80
    parallelism-factor = 10.0
    parallelism-max = 100
  }
  throughput = 5
}

video-signalling-actor-dispatcher-fork-join {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 80
    parallelism-factor = 10.0
    parallelism-max = 100
  }
  throughput = 5
}

play.http.errorHandler = "RmsErrorHandler"
